{"version":3,"sources":["components/layout/SignInLink.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/SummaryProject.js","components/projects/ListProject.js","components/dashboard/Dashboard.js","components/projects/DetailProject.js","components/auth/SignIn.js","store/actions/authAction.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignInLink","react_default","a","createElement","className","react_router_dom","to","SignOutLink","connect","state","console","log","layout_SignInLink","layout_SignOutLink","Notification","SummaryProject","_ref","project","id","title","authorName","ListProject","projects","map","key","projects_SummaryProject","Dashboard","this","props","projects_ListProject","dashboard_Notification","React","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","changeHandle","e","setState","defineProperty","target","value","submitHandle","preventDefault","signIn","inherits","createClass","onSubmit","htmlFor","type","onChange","dispatch","creds","credential","getState","getFirebase","auth","signInWithEmailAndPassword","then","catch","err","SignUp","firstName","lastName","CreateProject","createProject","getFirestore","add","objectSpread","authorId","createdAt","Date","App","layout_Navbar","react_router","exact","path","component","DetailProject","Boolean","window","location","hostname","initState","authError","authReducer","undefined","projectReducer","action","rootReducer","combineReducers","firestoreReducer","firebase","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","fbConfig","createFirestoreInstance","ReactDOM","render","es","react_redux_firebase_es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17813ff7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignInLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/project/create'>New Project</NavLink></li>\r\n            <li><NavLink to='/logout'>Log Out</NavLink></li>\r\n            <li><NavLink to='/user' className=\"btn btn-floating pink\">IKP</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignInLink;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLink = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLink;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignInLink from './SignInLink';\r\nimport SignOutLink from './SignOutLink';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Project IKP</Link>\r\n                <SignInLink />\r\n                <SignOutLink />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\n\r\nconst Notification = () => {\r\n    return(\r\n        <div>\r\n            <p>Notification</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SummaryProject = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey grey-text darken-3\">\r\n                <Link to={'/project/' + project.id}>\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                </Link>\r\n                <p>Post By {project.authorName}</p>\r\n                <p className=\"grey-text\">28th June 2019</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SummaryProject;","import React from 'react';\r\nimport SummaryProject from './SummaryProject';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ListProject = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link to={'/project/'+project.id} key={project.id}>\r\n                            <SummaryProject project={project} />\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListProject;","import React from 'react';\r\nimport Notification from './Notification';\r\nimport ListProject from '../projects/ListProject';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        let {projects} = this.props\r\n\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ListProject projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        projects:state.firestore.ordered.projects\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\n\r\nfunction DetailProject(props) {\r\n    const {project} = props;\r\n    if(project) {\r\n        return(\r\n            <div className=\"container section project-detail\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content grey darken-3\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey darken-3 grey-text text-darken-1\">\r\n                        <div>Posted By {project.authorName}</div>\r\n                        <div>28th June 2019</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">Project Loading...</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project:project   \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(DetailProject);","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {signIn} from '../../store/actions/authAction';\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email:null,\r\n        password:null\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)\r\n","export const signIn = (credential) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password\r\n        ).then(() => {\r\n            dispatch({type: \"LOGIN_SUCCESS\" })\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERR', err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email:null,\r\n        password:null,\r\n        firstName:null,\r\n        lastName:null\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectAction';\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title:null,\r\n        content:null\r\n    }\r\n\r\n    changeHandle = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value,\r\n        })\r\n    }\r\n\r\n    submitHandle = (e) => {\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.submitHandle} className=\"grey darken-3\">\r\n                    <h5 className=\"grey-text\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"emtitleail\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.changeHandle} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.changeHandle} ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorName:'Mikal',\r\n            authorId: 4234,\r\n            createdAt: new Date(),\r\n        }).then(() => {\r\n            dispatch({type: 'ADD_PROJECT', project})\r\n        }).catch((err) => {\r\n            dispatch({type: 'ADD_PROJECT_ERR', err})\r\n        })\r\n\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport DetailProject from './components/projects/DetailProject';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/project/create\" component={CreateProject} />\n            <Route path=\"/project/:id\" component={DetailProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login Success')\r\n            break;\r\n        case 'LOGIN_ERR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects:[\r\n        {id:1, title:'Find Some Ex', content:'this is a Content of Find Some Ex Post'},\r\n        {id:2, title:'Find Some Golf', content:'this is a Content of Find Some Ex Golf'},\r\n        {id:3, title:'Find Some Wolf', content:'this is a Content of Find Some Ex Wolf'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_PROJECT':\r\n            console.log('Project Created', action.project)\r\n            return state;\r\n            break;\r\n        case 'ADD_PROJECT_ERR':\r\n            console.log('Project Error', action.err)\r\n            return state;\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  // Initialize Firebase\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCuqZQTM2VHZecLzr9yIbROpeKfE1sGqiw\",\r\n    authDomain: \"marioplan-ikp.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-ikp.firebaseio.com\",\r\n    projectId: \"marioplan-ikp\",\r\n    storageBucket: \"marioplan-ikp.appspot.com\",\r\n    messagingSenderId: \"1087169892479\",\r\n    appId: \"1:1087169892479:web:52f535d007263871\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore}))\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n<Provider store={store}>\n  <ReactReduxFirebaseProvider {...rrfProps}>\n    <App />\n  </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'));\n// registerServiceWorker();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}